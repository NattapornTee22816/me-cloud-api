version: '3.9'

services:
  redis:
    container_name: redis
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=whp3DXm8tsCLAJyfPH9QMWVZ
      - REDIS_PORT=6379
      - REDIS_DATABASES=16

#  redis-commander:
#    container_name: redis_commander
#    image: rediscommander/redis-commander:latest
#    ports:
#      - "127.0.0.1:8081:8081"
#    environment:
#      - REDIS_HOSTS=local:redis:6379
#    depends_on:
#      - redis

  clickhouse01:
    container_name: clickhouse01
    image: clickhouse/clickhouse-server:head
    user: "${UID}:${GID}"
    restart: always
    ports:
      - "127.0.0.1:8123:8123"
      - "127.0.0.1:9000:9000"
    volumes:
#      - ${PWD}/fs/clickhouse01/.data:/var/lib/clickhouse/
      - chdata01:/var/lib/clickhouse/
      - ${PWD}/fs/clickhouse01/.logs:/var/log/clickhouse-server
      - ${PWD}/fs/clickhouse01/config.d/:/etc/clickhouse-server/config.d/
      - ${PWD}/fs/clickhouse01/users.d/:/etc/clickhouse-server/users.d/
      - ${PWD}/fs/clickhouse01/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    depends_on:
      - clickhouse-keeper01
    healthcheck:
      test: [ 'CMD', 'wget', '-O-', 'http://localhost:8123/?query=SELECT 1' ]
      interval: 30s
      timeout: 3s
      retries: 5
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  clickhouse-keeper01:
    container_name: clickhouse-keeper01
    image: clickhouse/clickhouse-keeper:head
    restart: always
    ports:
      - "127.0.0.1:9181:9181"
    volumes:
      - ${PWD}/fs/clickhouse-keeper01/keeper_config.xml:/etc/clickhouse-keeper/keeper_config.xml

  zookeeper01:
    container_name: zookeeper01
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper01:2888:3888
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 10s
      timeout: 5s
      retries: 3

  kafka01:
    container_name: kafka01
    image: confluentinc/cp-kafka:7.6.1
    restart: always
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka01:29092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper01:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      zookeeper01:
        condition: service_healthy
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  chdata01: